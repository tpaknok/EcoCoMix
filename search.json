[{"path":[]},{"path":"https://tpaknok.github.io/CPR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://tpaknok.github.io/CPR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://tpaknok.github.io/CPR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://tpaknok.github.io/CPR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://tpaknok.github.io/CPR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement tpaknok@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://tpaknok.github.io/CPR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://tpaknok.github.io/CPR/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://tpaknok.github.io/CPR/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://tpaknok.github.io/CPR/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://tpaknok.github.io/CPR/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://tpaknok.github.io/CPR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://tpaknok.github.io/CPR/articles/Advanced_uses.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Complex models and manual priors","text":"INLA conducts Bayesian analyses, users must specify priors different parameters, least need accept default values. Generally, mixed model, users must consider priors fixed effects, random effects, well distributions. , demonstrate manually specify prios include random effects CPR models. let’s load data first.","code":"library(phytools) library(tidyverse) library(CPR) data(\"KSR\") data(\"KSR_MLtree\") data(\"KSR_EF\")  VCV_sp <- vcv(KSR_MLtree) #species level phyologenetic covariance matrix using default (Brownian) model VCV_sp <- VCV_sp[order(rownames(VCV_sp)),order(colnames(VCV_sp))] VCV_comm <- get_comm_pair_r(KSR,VCV_sp)"},{"path":"https://tpaknok.github.io/CPR/articles/Advanced_uses.html","id":"complex-models","dir":"Articles","previous_headings":"","what":"Complex Models","title":"Complex models and manual priors","text":"Imagine BEF experiment KSR blocked design (doesn’t), add one column “block” data. Theoretically, blocking structure addressed adding random intercept. popular package lme4 glmmTMB, use (1|block) represent random intercept. Generally, might wish control structures data, spatial temporal structures. INLA capable handling , please refer INLA resources need . Now let’s generate fake blcoking structure.","code":"KSR_EF$block <- sample(1:7,88,replace=T)"},{"path":"https://tpaknok.github.io/CPR/articles/Advanced_uses.html","id":"running-the-model","dir":"Articles","previous_headings":"","what":"Running the Model","title":"Complex models and manual priors","text":"run model phylogenetic spatial (block) random effects, just run following. , however, use default priors everything. look prior specifications. Note INLA uses precision instead variance. Run functions examine priors actually used model.","code":"inla_m <- CPR(formula = LAI~Real.rich+                  f(comm,model=\"generic0\",Cmatrix=Phylo)+                  f(block,model=\"iid\"),                priors=NULL,                df = KSR_EF,                VCV_sp = VCV_sp,                comm=KSR,                family=\"gaussian\",                optim.lambda = T) inla_m$best_model$.args$control.fixed #gaussian distribution, original scale inla_m$best_model$.args$control.family[[1]]$hyper$theta1 #hyperparameter inla_m$best_model$all.hyper$random[[1]]$hyper$theta$prior #hyperparameter inla_m$best_model$all.hyper$random[[1]]$hyper$theta$param #hyperparameter inla_m$best_model$all.hyper$random[[2]]$hyper$theta$prior #hyperparameter inla_m$best_model$all.hyper$random[[2]]$hyper$theta$param #hyperparameter"},{"path":"https://tpaknok.github.io/CPR/articles/Advanced_uses.html","id":"internal-calculations-of-inla","dir":"Articles","previous_headings":"","what":"Internal Calculations of INLA","title":"Complex models and manual priors","text":"Apart fixed effects, uses gaussian distribution, parameters estimated using logGamma distribution. internal calculations conducted log scale back-transforming original scale. Therefore, priors must specificed log scale . can use inla.doc() check internal calculations different distributions priors. gaussian distribution, use inla.doc(\"Gaussian\"). Note log-transformed hyperparameters follow logGamma(,b), original hyperparameters follow Gamma(,b). Read inla.doc(\"Gamma\") learn ! can use functions get sense prior looks like. prior slope estimates","code":"plot(density(rnorm(1000,0,sqrt(1/0.001))))"},{"path":"https://tpaknok.github.io/CPR/articles/Advanced_uses.html","id":"using-manual-priors","dir":"Articles","previous_headings":"","what":"Using Manual Priors","title":"Complex models and manual priors","text":"Let’s say don’t like priors want change bit. create different objects storing priors. Note just demonstrating manually specify priors run CPR, thought process construct meaningful priors. just put priors different arguments. Notet blocking random effects, still use default one. need specify manual prior argument priors. example, want use default prior block, just use list(prior.phy=prior). Note name priors shouldn’t contain word “Phylo” - designated hold communtiy phylogenetic covariance matrix. name prior word “Phylo”, error occur. Now check priors !","code":"prior.fixed <- list(prec.intercept = 0.001,prec = 0.005) prior.family <-  list(hyper=list(theta1 = list(prior=\"loggamma\",param = c(1,4e-5)))) prior.phy <- list(prec=list(prior=\"loggamma\",param=c(0.1,0.1))) prior.block <- list(prec=list(prior=\"loggamma\",param=c(1,4e-5))) inla_m2 <- CPR(formula = LAI~Real.rich+                  f(comm,model=\"generic0\",Cmatrix=Phylo,hyper=prior.phy)+                  f(block,model=\"iid\"),               priors=list(prior.phy=prior.phy,prior.block=prior.block),               df = KSR_EF,               VCV_sp = VCV_sp,               comm=KSR,               family=\"gaussian\",               optim.lambda = T,               control.fixed = prior.fixed,               control.family = prior.family) inla_m2$best_model$.args$control.fixed #gaussian distribution, original scale inla_m2$best_model$.args$control.family[[1]]$hyper$theta1 #hyperparameter inla_m2$best_model$all.hyper$random[[1]]$hyper$theta$prior #hyperparameter inla_m2$best_model$all.hyper$random[[1]]$hyper$theta$param #hyperparameter inla_m2$best_model$all.hyper$random[[2]]$hyper$theta$prior #hyperparameter inla_m2$best_model$all.hyper$random[[2]]$hyper$theta$param #hyperparameter"},{"path":"https://tpaknok.github.io/CPR/articles/Advanced_uses.html","id":"notes-on-priors","dir":"Articles","previous_headings":"","what":"Notes on Priors","title":"Complex models and manual priors","text":"specify priors? Well lot debates encouraged visit literature. choose use default ones, understand values . Many studies prefer using non-informative priors minimize influences results (.e., results strongly driven data instead priors), also good reasons use informative priors, especially sample size low. fact one major advantage Bayesian analyses! Note default priors always non-informative! example, specify fixed effect priors N(0,1), might non-informative standardized responses predictors, given biological relationships rarely strong (like increasing responses 1 SD predictors increase 1 SD). However, run analyses original scale, becomes tricky, slope can change according unit responses predictors. example, body mass increases 0.01kg per unit temperature, converting unit g completely change magnitude slope (.e, 10gram)!","code":""},{"path":"https://tpaknok.github.io/CPR/articles/Empirical_multiple.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Empirical Analyses with CPR - Multiple Functions","text":"Assuming multiple ecosystem functions analyse, can repeat code single ecosystem function analyses multiple times. bit annoying though, especially lot data! , provide example use loop . First, load data .","code":"library(phytools) library(tidyverse) library(CPR) library(INLA) data(\"KSR\") data(\"KSR_MLtree\") data(\"KSR_EF\") VCV_sp <- vcv(KSR_MLtree) #species level phyologenetic covariance matrix using default (Brownian) model VCV_sp <- VCV_sp[order(rownames(VCV_sp)),order(colnames(VCV_sp))] VCV_comm <- get_comm_pair_r(KSR,VCV_sp)"},{"path":"https://tpaknok.github.io/CPR/articles/Empirical_multiple.html","id":"data-explorations","dir":"Articles","previous_headings":"","what":"Data Explorations","title":"Empirical Analyses with CPR - Multiple Functions","text":"use lapply . ten ecosystem functions, different statistical properties. examples, arthropod abundance must integer, damage reduction effects continuous. visualize distributions different ecosystem functions, can see spike zero! Histograms LAI Histograms floral abundance Thus, use different distributions different ecosystem functions. example, use negative binomial integer data, zeroinflated negative binomial integer data many zeros. continuous data, can use normal distribution, tweedie distribution many zeroes. need create lists store different formulas, name distribution, priors different models. Let’s . inla.set.contro.family.default indicates use default priors hyperparameters. However, tweedie distribution, specified non-informative prior.","code":"plot(hist(KSR_EF$LAI)) plot(hist(KSR_EF$flwr_total))"},{"path":"https://tpaknok.github.io/CPR/articles/Empirical_multiple.html","id":"model-setups","dir":"Articles","previous_headings":"","what":"Model Setups","title":"Empirical Analyses with CPR - Multiple Functions","text":"can simply use lapply loop everything. take time run!!!","code":"y <- c(\"poll_total\",        \"bugs\",        \"bug.rich\",        \"litter2012\",        \"ave.biomass\",        \"flwr_total\",        \"Mass.loss.2month\",        \"LAI\",        \"mean.N.change\",        \"Damage_effect\") #response  x <- \"Real.rich\" # predictors re <- 'f(comm,model=\"generic0\",Cmatrix=Phylo)' #random effect  family <- list(\"zeroinflatednbinomial1\",             \"nbinomial\",             \"nbinomial\",             \"gaussian\",             \"gaussian\",             \"tweedie\",             \"gaussian\",             \"tweedie\",             \"gaussian\",             \"gaussian\") #family for each response  formulas <- lapply(paste0(y,\"~\",x,\"+\",re),function(x) as.formula(x))  control.family<- list(inla.set.control.family.default(\"zeroinflatednbinomial1\"),                       inla.set.control.family.default(\"nbinomial\"),                       inla.set.control.family.default(\"nbinomial\"),                       inla.set.control.family.default(\"gaussian\"),                       inla.set.control.family.default(\"gaussian\"),                       list(hyper = list(                            theta1 = list(initial = 0),                            theta2 = list(initial = 0,                                        prior = \"loggamma\",                                        param = c(0.1,0.1)))),                       inla.set.control.family.default(\"gaussian\"),                       list(hyper = list(                            theta1 = list(initial = 0),                            theta2 = list(initial = 0,                                        prior = \"loggamma\",                                        param = c(0.1,0.1)))),                       inla.set.control.family.default(\"gaussian\"),                       inla.set.control.family.default(\"gaussian\")) #hyperparameter priors  KSR_EF_list <- lapply(1:10,function(x) KSR_EF) #create ten sets of KSR_EF data comm_list <- lapply(1:10, function(x) KSR) #ten sets of comm data  KSR_EF_list[[10]] <- subset(KSR_EF_list[[10]], Real.rich > 1) #for damage effect, we exclude monoculture communities comm_list[[10]] <- KSR[rowSums(KSR) >1,] #for damage effect, we exclude monoculture communities"},{"path":"https://tpaknok.github.io/CPR/articles/Empirical_multiple.html","id":"empirical-analyses---multiple-functions","dir":"Articles","previous_headings":"","what":"Empirical Analyses - Multiple Functions","title":"Empirical Analyses with CPR - Multiple Functions","text":"","code":"BEF_KSR <- lapply(1:length(family), function(x) CPR(formulas[[x]],                                                     priors=NULL,                                                     df = KSR_EF_list[[x]],                                                     VCV_sp = VCV_sp,                                                     comm=comm_list[[x]],                                                     family=family[[x]],                                                     control.family=control.family[[x]],                                                     inla.rerun=3,                                                     optim.lambda = T))"},{"path":"https://tpaknok.github.io/CPR/articles/Empirical_multiple.html","id":"visualizations","dir":"Articles","previous_headings":"","what":"Visualizations","title":"Empirical Analyses with CPR - Multiple Functions","text":"visualize expected effect species richness different ecosystem functions, need extract predictions model. make figure, also need restructure KSR_EF wide format long format. Also, flower abundance ranged 0-60000, presented findings log-scale (although analyses log transform , tweedie use log link). Now just ggplot2 code, figure Tsang et al. (2024) produced. Predicted effects species richness ten selected ecosystem functions","code":"all_predictions <- do.call(rbind,sapply(1:10, function(x) BEF_KSR[[x]]$prediction)) plot_data <- KSR_EF %>%   select(any_of(y)|\"Real.rich\") %>%   pivot_longer(!Real.rich,names_to=\"response\")  plot_data$value[plot_data$response == \"flwr_total\"] <- log(plot_data$value[plot_data$response == \"flwr_total\"]+1) all_predictions[all_predictions$response == \"flwr_total\",c(\"0.5quant\",\"0.025quant\",\"0.975quant\")] <- log(all_predictions[all_predictions$response == \"flwr_total\",c(\"0.5quant\",\"0.025quant\",\"0.975quant\")]+1) library(ggplot2) p <- ggplot(data=all_predictions)+   geom_jitter(data=plot_data,aes(y=value,x=Real.rich),width=0.05)+   geom_line(aes(y=`0.5quant`,x=Real.rich,colour=model,linetype=Sig))+   geom_ribbon(aes(y=`0.5quant`,x=Real.rich,fill=model,ymin=`0.025quant`,ymax=`0.975quant`),alpha=0.3,colour=\"transparent\")+   facet_wrap(~response,scales=\"free\",nrow=5,ncol=2)+   theme_classic()+   labs(x=\"Species richness\",y=\"Ecosystem function\",colour=\"Model\",fill=\"Model\",linetype=\"Significance\")+   scale_linetype_manual(values=c(2,1))+   scale_colour_manual(values=c(\"#000000\",\"#E69F00\"))+   scale_fill_manual(values=c(\"#000000\",\"#E69F00\"))+   theme(legend.position=\"bottom\")  plot(p)"},{"path":"https://tpaknok.github.io/CPR/articles/Empirical_single.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Empirical Analyses with CPR - Single Function","text":"R Markdown document describing use CPR conduct BEF regression, community-level analyses. need install load multiple packages data. Let’s get variane covariance matrix species community level. KSR_EF data multiple ecosystem function.","code":"library(phytools) library(tidyverse) library(CPR) data(\"KSR\") data(\"KSR_MLtree\") data(\"KSR_EF\") VCV_sp <- vcv(KSR_MLtree) #species level phyologenetic covariance matrix using default (Brownian) model VCV_sp <- VCV_sp[order(rownames(VCV_sp)),order(colnames(VCV_sp))] VCV_comm <- get_comm_pair_r(KSR,VCV_sp) VCV_comm[1:5,1:5] #>           [,1]      [,2]      [,3]      [,4]      [,5] #> [1,] 1.0000000 0.7031681 0.5639611 0.5601336 0.7539047 #> [2,] 0.7031681 1.0000000 0.5458038 0.5420995 0.7048548 #> [3,] 0.5639611 0.5458038 1.0000000 0.9932127 0.5749535 #> [4,] 0.5601336 0.5420995 0.9932127 1.0000000 0.5710514 #> [5,] 0.7539047 0.7048548 0.5749535 0.5710514 1.0000000 head(KSR_EF) #>   Plot Real.rich litter2012 ave.biomass  LAI mean.N.change poll_total flwr_total Mass.loss.2month Damage_effect bugs bug.rich #> 1   X2         1      79.05    32.97333 1.67       -0.0015         20 43113.5000            3.362     0.0000000    9        7 #> 2   X3         4      74.23    82.41000 5.53       -0.0275         53  2126.1429            3.718     0.3001195    7        6 #> 3   X4         2      34.50    62.92667 3.04        0.0060        150   324.4286            3.521     0.4195279    4        2 #> 4   X7         1      36.32    34.38333 3.42       -0.0575          0     0.0000            3.328     0.0000000    5        3 #> 5   X8         3      21.46   147.05667 7.14       -0.0070          0     0.0000            3.608     2.7460093    4        4 #> 6   X9         1      37.26    33.80333 1.01        0.0415          0     0.0000            3.627     0.0000000   11        7"},{"path":[]},{"path":"https://tpaknok.github.io/CPR/articles/Empirical_single.html","id":"empirical-analyses---single-function","dir":"Articles","previous_headings":"","what":"Empirical Analyses - Single Function","title":"Empirical Analyses with CPR - Single Function","text":"repeated analyses Cadotte et al. (2017), involving ten ecosystem functions. one ecosystem function interest (don’t mind code clunky), can just use INLA write similar functions ten times. example, let’s analyze flower abundance. INLA powerful package, can bit complicated use. Bayesian analysis, specify priors. INLA different default priors check website interested. simplicty’s sake, use default prior random fixed effects, uninformative case. However, dispersion parameter tweedie, actually used gaussian distribution N(0,2). Note prior log-scale internal calculation INLA. ’s default setting loggamma (100,100) seems narrow range, thus becoming informative, least dataset. Generally, think carefully prior constructions. Default priors always uninformative, can huge influence data! syntax INLA different packages like lme4 glmmTMB. random effect, need use f() provide necessary argument. manually computed covariance matrix, need first convert precision matrix, throw Cmatrix argument. Also, need set model “generic0”. use CPR, need supply species-level covariance matrix VCV_sp, add “Phylo” Cmatrix argument. Phylo just placeholder internal calculation CPR automatically convert covariance matrix precision matrix (even optimize covariance matrix wish ). also need add ID plot, CPR function internally create column named “comm” automatically. INLA sometimes might fail run, rerun automatically. don’t need worry . choose optimize phylogenetic signal, might take run! patient!","code":"inla_m <- CPR(formula = bugs~Real.rich+f(comm,model=\"generic0\",Cmatrix=Phylo),               priors=NULL,               df = KSR_EF,               VCV_sp = VCV_sp,               comm=KSR,               family=\"nbinomial\",               optim.lambda = T)  summary(inla_m$best_model) #>  #> Call: #>    c(\"inla.core(formula = formula, family = family, contrasts = contrasts, \", \" data = data, quantiles = quantiles, E = E, offset =  #>    offset, \", \" scale = scale, weights = weights, Ntrials = Ntrials, strata = strata, \", \" lp.scale = lp.scale, link.covariates =  #>    link.covariates, verbose = verbose, \", \" lincomb = lincomb, selection = selection, control.compute = control.compute, \", \"  #>    control.predictor = control.predictor, control.family = control.family, \", \" control.inla = control.inla, control.fixed =  #>    control.fixed, \", \" control.mode = control.mode, control.expert = control.expert, \", \" control.hazard = control.hazard,  #>    control.lincomb = control.lincomb, \", \" control.update = control.update, control.lp.scale = control.lp.scale, \", \" control.pardiso =  #>    control.pardiso, only.hyperparam = only.hyperparam, \", \" inla.call = inla.call, inla.arg = inla.arg, num.threads = num.threads, \", \"  #>    keep = keep, working.directory = working.directory, silent = silent, \", \" inla.mode = inla.mode, safe = FALSE, debug = debug,  #>    .parent.frame = .parent.frame)\" )  #> Time used: #>     Pre = 0.223, Running = 0.278, Post = 0.145, Total = 0.646  #> Fixed effects: #>              mean    sd 0.025quant 0.5quant 0.975quant  mode kld #> (Intercept) 2.187 0.276      1.624    2.193      2.713 2.193   0 #> Real.rich   0.085 0.095     -0.101    0.085      0.274 0.085   0 #>  #> Random effects: #>   Name     Model #>     comm Generic0 model #>  #> Model hyperparameters: #>                                                        mean    sd 0.025quant 0.5quant 0.975quant mode #> size for the nbinomial observations (1/overdispersion) 2.53 0.512       1.68     2.48       3.68 2.38 #> Precision for comm                                     3.31 1.701       1.14     2.94       7.64 2.32 #>  #> Watanabe-Akaike information criterion (WAIC) ...: 617.75 #> Effective number of parameters .................: 12.02 #>  #> Marginal log-Likelihood:  -872.48  #>  is computed  #> Posterior summaries for the linear predictor and the fitted values are computed #> (Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')"},{"path":"https://tpaknok.github.io/CPR/articles/Empirical_single.html","id":"residual-checking","dir":"Articles","previous_headings":"","what":"Residual Checking","title":"Empirical Analyses with CPR - Single Function","text":"Let’s model diagnostics make sure model makes sense. First, use function INLA_simulate obtain simulated response model. put DHARMa conduct different diagnostics. Outputs DHARMa negative binomial model can see data don’t deviate lot expected line QQ plot, good thing. Also, obvious pattern residual graph….model ok.","code":"library(DHARMa) #> This is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa') sres <- INLA_simulate(inla_m$best_model) DHARMa_res <- createDHARMa(sres,                            KSR_EF$bugs,                            fittedPredictedResponse=inla_m$predictedfittedresponse,                            integerResponse = T) plot(DHARMa_res,quantreg=F)"},{"path":"https://tpaknok.github.io/CPR/articles/Empirical_single.html","id":"a-bad-example","dir":"Articles","previous_headings":"","what":"A Bad Example","title":"Empirical Analyses with CPR - Single Function","text":"Now let’s try run analyses poisson distribution see happens. hyperparameter poisson distribution use default settings INLA. Outputs DHARMa poisson model Clearly worse fit negative binomial! know poisson distributions often fail describe ecological data properly. functions DHARMa, check package build robust models!","code":"inla_m2 <- CPR(formula = bugs~Real.rich+f(comm,model=\"generic0\",Cmatrix=Phylo),               priors=NULL,               df = KSR_EF,               VCV_sp = VCV_sp,               comm=KSR,               family=\"poisson\")  summary(inla_m2$best_model) #>  #> Call: #>    c(\"inla.core(formula = formula, family = family, contrasts = contrasts, \", \" data = data, quantiles = quantiles, E = E, offset =  #>    offset, \", \" scale = scale, weights = weights, Ntrials = Ntrials, strata = strata, \", \" lp.scale = lp.scale, link.covariates =  #>    link.covariates, verbose = verbose, \", \" lincomb = lincomb, selection = selection, control.compute = control.compute, \", \"  #>    control.predictor = control.predictor, control.family = control.family, \", \" control.inla = control.inla, control.fixed =  #>    control.fixed, \", \" control.mode = control.mode, control.expert = control.expert, \", \" control.hazard = control.hazard,  #>    control.lincomb = control.lincomb, \", \" control.update = control.update, control.lp.scale = control.lp.scale, \", \" control.pardiso =  #>    control.pardiso, only.hyperparam = only.hyperparam, \", \" inla.call = inla.call, inla.arg = inla.arg, num.threads = num.threads, \", \"  #>    keep = keep, working.directory = working.directory, silent = silent, \", \" inla.mode = inla.mode, safe = FALSE, debug = debug,  #>    .parent.frame = .parent.frame)\" )  #> Time used: #>     Pre = 0.225, Running = 0.243, Post = 0.1, Total = 0.568  #> Fixed effects: #>              mean    sd 0.025quant 0.5quant 0.975quant  mode kld #> (Intercept) 2.026 0.247      1.532    2.030      2.502 2.030   0 #> Real.rich   0.024 0.062     -0.099    0.024      0.145 0.024   0 #>  #> Random effects: #>   Name     Model #>     comm Generic0 model #>  #> Model hyperparameters: #>                    mean   sd 0.025quant 0.5quant 0.975quant mode #> Precision for comm 1.65 0.63      0.679     1.56       3.12 1.40 #>  #> Watanabe-Akaike information criterion (WAIC) ...: 872.66 #> Effective number of parameters .................: 69.30 #>  #> Marginal log-Likelihood:  -972.73  #>  is computed  #> Posterior summaries for the linear predictor and the fitted values are computed #> (Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')  sres2 <- INLA_simulate(inla_m2$best_model) DHARMa_res2 <- createDHARMa(sres2,                            KSR_EF$bugs,                            inla_m2$predictedfittedresponse,                            integerResponse=T) plot(DHARMa_res2,quantreg=F)"},{"path":"https://tpaknok.github.io/CPR/articles/Empirical_single.html","id":"making-figures","dir":"Articles","previous_headings":"","what":"Making figures","title":"Empirical Analyses with CPR - Single Function","text":"Let’s say want visualize predicted relationships arthropod abundance species richness. Note predict functions doesn’t work INLA, many packages don’t support INLA . use CPR, result automatically provide predicted relationships can pass ggplot make pretty figures. variable, CPR create list. Thus example can extract predicted relationship inla_m$prediction$Real.rich want visualize expected effect species richness. course can just visualize effect /without phylogeny, depending one fits better. Anyway, based models, found evidence arthropod abundance varied across different treatments. Predicted effects species richness arthropod abundance","code":"library(ggplot2)  p <- ggplot()+   geom_point(data=KSR_EF,aes(x=Real.rich,y=bugs))+   geom_line(data=inla_m$prediction$Real.rich,aes(x=Real.rich,                                                  y=`0.5quant`,                                                  colour=model,                                                  ),linetype=2)+   geom_ribbon(data=inla_m$prediction$Real.rich,aes(x=Real.rich,                                                    y=`0.5quant`,                                                    ymin=`0.025quant`,                                                    ymax=`0.975quant`,                                                    fill=model,                                                    ),alpha=0.3)+   scale_colour_manual(values=c(\"#000000\",\"#E69F00\"))+   scale_fill_manual(values=c(\"#000000\",\"#E69F00\"))+   labs(x=\"Species richness\",y = \"Arthropod abundance\",fill=\"Model\",colour=\"Model\")+   theme_classic()+   theme(legend.position=\"bottom\")  plot(p)"},{"path":"https://tpaknok.github.io/CPR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Toby Pak Nok Tsang. Maintainer.","code":""},{"path":"https://tpaknok.github.io/CPR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tsang TPN (2025). CPR: Community Phylogenetic Regression. R package version 0.1.0, https://tpaknok.github.io/CPR/, https://github.com/tpaknok/CPR.","code":"@Manual{,   title = {CPR: Community Phylogenetic Regression},   author = {Toby Pak Nok Tsang},   year = {2025},   note = {R package version 0.1.0, https://tpaknok.github.io/CPR/},   url = {https://github.com/tpaknok/CPR}, }"},{"path":"https://tpaknok.github.io/CPR/index.html","id":"cpr-","dir":"","previous_headings":"","what":"Community Phylogenetic Regression","title":"Community Phylogenetic Regression","text":"EcoCoMix addresses phylogenetic non-independence species community analyses.","code":""},{"path":"https://tpaknok.github.io/CPR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Community Phylogenetic Regression","text":"can install development version CPR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"tpaknok/EcoCoMix\")"},{"path":"https://tpaknok.github.io/CPR/index.html","id":"main-function","dir":"","previous_headings":"","what":"Main function","title":"Community Phylogenetic Regression","text":"main function package EcoCoMix, address compoisitional autocorrelation regression. Briefly, function automatically constructs compositional (considering phylogenetic covariance species provided) matrix communities based composition evolutionary history species.","code":""},{"path":"https://tpaknok.github.io/CPR/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Community Phylogenetic Regression","text":"many ecological analyses, obtained different metrics community levels analyzed using LM/GLM. Nevertheless, assumes statistical independence communities. Species however independent, given shared evolutionary history. Indeed, many comparative analyses (e.g., correlating different traits), shared evolutionary history species controlled using Generalized Least Square Regression Generalized Linear Mixed Model. functions CPR help users control phylogenetic non-independence communities without intensive coding. Users need 1) species composition community 2) phylogenetic tree including species community data.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/BEF_simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulating a BEF relationship and evaluting different analytical methods — BEF_simulate","title":"Simulating a BEF relationship and evaluting different analytical methods — BEF_simulate","text":"Simulating BEF relationship /without phylogenetic signals, followed evaluating different analytical methods based type-/type-II errors, estimated phylogenetic signals, R2.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/BEF_simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulating a BEF relationship and evaluting different analytical methods — BEF_simulate","text":"","code":"BEF_simulate(comm,              CV_sp=NULL,              nspp=15,              nsite=50,              min_richness=1,              max_richness=4,              spaMM_formula,              b0=0,              b1=0,              signals_X=\"phy_cor\",              noise_mean=0,              noise_sd=1,              non_phy_cor_mean=0,              non_phy_cor_sd=1,              lambda_true=1,              scale_all=FALSE,              conv_fail_drop=TRUE,              ...)"},{"path":"https://tpaknok.github.io/CPR/reference/BEF_simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulating a BEF relationship and evaluting different analytical methods — BEF_simulate","text":"comm species-site matrix. VCV_sp phylogenetic covariance matrix species levels. ignored, stochastic birth-death tree generated. nspp Species pool size. default 15. nsite Number sites. default 50. min_richness minimum species richness among sites. default 1. max_richness maximum species richness among sites. default 1. spaMM_formula formula spaMM syntax. See Details specifying phylogenetic random effects b0 value b0, global intercept. default 0 b1 value b1, effect X Y. signals_X Type X simulated used. signals_X = \"sr\", species richness simulated communities used. signals_X = \"phy_cor\", continuous variable phylogenetic signals generated. signals_X = \"no_phy_cor\", continuous variable without phylogenetic signals generated. mean S.D. normal distribution specified argument non_phy_cor_mean non_phy_cor_sd. default \"phy_cor\". noise_mean mean random noise generated normal distribution. default 0 noise_sd S.D. random noise generated normal distribution. default 1 non_phy_cor_mean mean normal distribution used generate X specified \"no_phy_cor\". default 0. non_phy_cor_sd S.D. normal distribution used generate X specified \"no_phy_cor\". default 1. lambda_true Phylogenetic signals species contribution ecosyste functions. can lead phylogeny influencing compositional autocorrelation communities. default 1. scale_all Standardizing variables centering, default FALSE. conv_fail_drop Drop results spaMM failed converge. default TRUE. ... Othert arguments passed CPR_spaMM.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/BEF_simulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulating a BEF relationship and evaluting different analytical methods — BEF_simulate","text":"simulated relationship $$Y = X_{0}+b_{1}X_{1}+X_{2}+X_{3}$$ \\(X_{0}\\) population-level intercept. \\(X_{2}\\) variable compoisitional autocorrelation, extent phylogenetic signal depending lambda_true. \\(X_{1}\\) can species richness, variable without compositional autocorrelation, depending signals_X. \\(b_{1}\\) poluation-level effect \\(X_{1}\\) can modified users. \\(X_{3}\\) random noise, defaulted \\(N(0,1)\\). \\(X_{2}\\) (\\(X_{1}\\) signals_X = \"phy_cor\") follows $$MVN(0,{C_{comm})}$$ \\(C_{comm}\\) represents correlation matrix communities. estent phylogenetic influence depends lambda_true.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/BEF_simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulating a BEF relationship and evaluting different analytical methods — BEF_simulate","text":"list data frames length equals number simulation. following indicates whether X1 statistically significant based different model specification. 1=Y; 0=N. m_optim_sig Model based optimized phylogenetic structure. m_true_sig Model based phylogenetic structure. m_original_sig Model based phylogenetic structure. m_best_sig parsimonious model. m_without_comp_sig Model without considering compositional autocorrelation. following indicates estimated slope X1: m_optim_slope Model based optimized phylogenetic structure. m_true_slope Model based true phylogenetic structure. m_original_slope Model based provided phylogenetic structure. m_best_slope parsimonious model. m_without_comp_slope Model without considering compositional autocorrelation. Optimized lambda: optim_lambda Optimized lambda model m_optim optim_lambda_int Optimized lambda intercept-model. AIC models: AIC_without_comp Model without considering compositional autocorrelation. AIC_original_VCV Model based provided phylogenetic structure AIC_optim Model based optimized phylogenetic structure. AIC_star Model based star phylogeny. AIC_true Model based true phylogenetic structure AIC_optim_int Intercept-model based optimized phylogenetic structure Simulation properties: min_richness minimum richness communities simulation. max_richness maximum richness communities simulation. nspp Species pool size. true_lambda True lambda phylogenetic structure r_x1x2 Correlation \\(X_{1}\\) \\(X_{2}\\) b1 True value \\(b_{1}\\). Count Number iterations. >1 model failed converge conv_fail_drop = T. signals_X Input signals_X argument. phylo_structure \"Simulated\" (VCV_sp null) \"Provided\" (VCV_sp null). results: optim_r2m Marginal R-squared optimized model. optim_r2c Conditional R-squared optimized model. NumDF Numerator degree--freedom based Satterthwaite approximation optimized model. DenDF Conditional degree--freedom based Satterthwaite approximation optimized model.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/BEF_simulate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulating a BEF relationship and evaluting different analytical methods — BEF_simulate","text":"Toby P.N. Tsang","code":""},{"path":[]},{"path":"https://tpaknok.github.io/CPR/reference/BEF_simulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulating a BEF relationship and evaluting different analytical methods — BEF_simulate","text":"","code":"library(phytools) library(tidyverse) library(CPR) library(ape)  nspp <- 14 sim <- 50 b1 <- 0 #assume no effects of species richness signals_X <- \"sr\" lambda_true <- runif(sim) #random phylogenetic signals  count <- 1  result <- list()  spaMM_formula <-  y~x1+corrMatrix(1|comp_id)  for (i in 1:sim) {   message(\"sim_\",i)    result[[i]] <- tryCatch(BEF_simulate(comm = NULL,                                            VCV_sp = NULL,                                            nspp=nspp,                                            nsite=88,                                            min_richness=1,                                            max_richness= 4,                                            spaMM_formula=spaMM_formula,                                            b1=b1,                                            signals_X=signals_X,                                            noise_mean = 0,                                            noise_sd = 0.01, #very low noise                                            lambda_true= lambda_true[[i]],                                            conv_fail_drop = TRUE,                                            scale_all=FALSE,                                            control.optim=list(factr=1e12),                                            optim.lambda=TRUE,                                            init=list(), #specification for spaMM - calculations will be faster                                            int_model=FALSE),                               error = function(e) e) #catch error return   }   all_result <- as.data.frame(do.call(rbind,result))"},{"path":"https://tpaknok.github.io/CPR/reference/CPR_spaMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Modeling community-level data controlling compositional autocorrelation. — CPR_spaMM","title":"Modeling community-level data controlling compositional autocorrelation. — CPR_spaMM","text":"function uses fitme (package spaMM) model compositional autocorrelation analyzing community-level data. Phylogenetic relationship species can provided optimized (assuming Brownian motion latter case)","code":""},{"path":"https://tpaknok.github.io/CPR/reference/CPR_spaMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modeling community-level data controlling compositional autocorrelation. — CPR_spaMM","text":"","code":"CPR_spaMM(formula,           data,           VCV_sp,           comm,           force.PD=FALSE,           optim.lambda=TRUE,           original.VCV=TRUE,           AIC_threshold=-4,           method.spaMM=\"REML\",           true_VCV=NULL,           control.optim=NULL,           comm_kronecker=NULL,           int_model=TRUE,           ...)"},{"path":"https://tpaknok.github.io/CPR/reference/CPR_spaMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modeling community-level data controlling compositional autocorrelation. — CPR_spaMM","text":"formula formula specified spaMM format (see fitme). Use \"comp_id\"\" represent community-level random effect controlling compositional autocorrelation (see Example). data data frame containing variables model. VCV_sp covariance (correlation!) matrix illsutrating phylogenetic relationship species comm site(row)-species(column) matrix. Pleasure ensure species names consistent VCV_sp comm. force.PD Forcing Positive Definite using nearPD. Defaulted FALSE. optim.lambda TRUE/FALSE. Whether lambda optimized (finding value lowest cAIC). original.VCV Return model results based provided VCV_sp. Defaulted TRUE. AIC_threshold cAIC threshold include compositional random effect. Defaulted -4 (.e., including compositional random effect needs reduce cAIC 4 considered improving model). method.spaMM \"ML\" (Default), \"REML\", PGL/L. passed method argument fitme. true_VCV True phylogenetic relationship species. Useful simulations empirical analyses. control.optim list control parameters optim (See documentation optim using argument). comm_kronecker Arguments used speed internal calculations. Defaulted NULL. int_model Obtain results intercept-models (without compositional random effects). Defaulted TRUE. ... Optional arguments passed fitme.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/CPR_spaMM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modeling community-level data controlling compositional autocorrelation. — CPR_spaMM","text":"Can provide extra specifications fitme function speed calculations / obtain reliable results. technical details, however, non-trivial. Please see documentation fitme, inits, optim. ignored, model run using defaults functions.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/CPR_spaMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modeling community-level data controlling compositional autocorrelation. — CPR_spaMM","text":"list 19 objects. best_model Results best model (.e., model optimized lambda dAIC lower intercept-model 4 (self-defined threshold.) best_model_satt Results best model based Satterthwaite approximation, provides better estimations p-values. optimized_lambda_model,optimized_lambda_model_satt best_model best_model_satt, model optimized phylogenetic structure. original_VCV_model,original_VCV_m_satt , models based provided phylogenetic structure. true_model,true_model_satt , models based true phylogenetic structure (useful simulations). without_comp_model Model results without considering compositional autocorrelation. without_comp_anova Model results without considering compositional autocorrelation ANOVA format. Easier compare results mixed models based Satterthwaite approximation. intercept_only_model Intercept-model results (compositional correlation). star_model Model results without considering phylogenetic dependence species (.e., species phylogenetically independent). AIC cAIC models . optimized_lambda,optimized_lambda_int optimized lambda based full model (former) intercept-model(latter). conv whether following models reached convergence: best model, full model based optimized phylogenetic structure, model based provided phylogenetic relationship. Yes=1, =0.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/CPR_spaMM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modeling community-level data controlling compositional autocorrelation. — CPR_spaMM","text":"Toby P.N. Tsang","code":""},{"path":[]},{"path":"https://tpaknok.github.io/CPR/reference/CPR_spaMM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modeling community-level data controlling compositional autocorrelation. — CPR_spaMM","text":"","code":"library(phytools) library(tidyverse) library(CPR) library(ape) library(DHARMa)  data(KSR) data(KSR_MLtree) data(KSR_EF)  m_LAI <- CPR_spaMM(LAI~Real.rich+corrMatrix(1|comp_id),           data=KSR_EF,           comm=KSR,           VCV_sp = vcv(KSR_MLtree),           method.spaMM=\"REML\")  m_LAI$best_model m_LAI$best_model_satt plot(simulateResiduals(m_LAI$optimized_lambda_model,re.form=NULL))"},{"path":"https://tpaknok.github.io/CPR/reference/get_R2.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide marginal and conditional R-squared for outputs from spaMM — get_R2","title":"Provide marginal and conditional R-squared for outputs from spaMM — get_R2","text":"Provide marginal conditional R-squared outputs spaMM","code":""},{"path":"https://tpaknok.github.io/CPR/reference/get_R2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide marginal and conditional R-squared for outputs from spaMM — get_R2","text":"","code":"get_R2(spaMM_m,spaMM_m_int_only=NULL)"},{"path":"https://tpaknok.github.io/CPR/reference/get_R2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide marginal and conditional R-squared for outputs from spaMM — get_R2","text":"spaMM_m model output spaMM spaMM_m_int_only intercept-model spaMM. needed negative binomial distribution.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/get_R2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Provide marginal and conditional R-squared for outputs from spaMM — get_R2","text":"function based R2 performance package, support spaMM. Note model currently supports gassuian negative binomial (negbin2) distribution. model contain compositional autocorrelation, probably easier use packages functions (e.g. lme4, glmmTMB, lm, glm), better supported R packages. can also calculate correlation coefficient observed predicted responses (prediction can based fixed effects full model, depending purposes). technically marginal conditional R-squared, easy solution models based distributions supported .","code":""},{"path":"https://tpaknok.github.io/CPR/reference/get_R2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide marginal and conditional R-squared for outputs from spaMM — get_R2","text":"R2m Marginal R-squared. R2c Conditional R-squared.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/get_R2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Provide marginal and conditional R-squared for outputs from spaMM — get_R2","text":"Toby P.N. Tsang","code":""},{"path":[]},{"path":[]},{"path":"https://tpaknok.github.io/CPR/reference/get_comm_pair_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogenetic covariance or correlation Matrix at the community level — get_comm_pair_r","title":"Phylogenetic covariance or correlation Matrix at the community level — get_comm_pair_r","text":"function computes expected covariances correations community-level properties communities.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/get_comm_pair_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogenetic covariance or correlation Matrix at the community level — get_comm_pair_r","text":"","code":"get_comm_pair_r(comm, VCV_sp, comm_kronecker=NULL, force.PD=FALSE)"},{"path":"https://tpaknok.github.io/CPR/reference/get_comm_pair_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phylogenetic covariance or correlation Matrix at the community level — get_comm_pair_r","text":"comm data frame describing species (column) abundance / presence-absencene site, sample general (row). VCV_sp phylogenetic covariance (correlation!) matrix based evolutionary models. comm_kronecker internal calculation CPR_spaMM. force.PD Forcing Positive Definite using nearPD. Defaulted FALSE.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/get_comm_pair_r.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phylogenetic covariance or correlation Matrix at the community level — get_comm_pair_r","text":"function upscales species-level covariance community-level covariance, subsequently converted correlation matrix.","code":""},{"path":"https://tpaknok.github.io/CPR/reference/get_comm_pair_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phylogenetic covariance or correlation Matrix at the community level — get_comm_pair_r","text":"corM Expected correlation communities. covM Expected covariance communities. comm_kronecker internal uses speed optimization processes.","code":""},{"path":[]},{"path":"https://tpaknok.github.io/CPR/reference/get_comm_pair_r.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Phylogenetic covariance or correlation Matrix at the community level — get_comm_pair_r","text":"Toby P.N. Tsang","code":""},{"path":[]},{"path":[]},{"path":"https://tpaknok.github.io/CPR/reference/get_comm_pair_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phylogenetic covariance or correlation Matrix at the community level — get_comm_pair_r","text":"","code":"library(phytools) library(tidyverse) library(CPR) library(ape) library(DHARMa)  data(KSR) data(KSR_MLtree) data(KSR_EF)  phy_comm_M <- get_comm_pair_r(KSR,vcv(KSR_MLtree))$corM"}]
